package network1;


import java.awt.Color;
import static java.awt.Color.red;
import java.awt.Font;
import java.io.*; 
import java.net.*; 
import java.nio.ByteBuffer;
import static java.time.Clock.system;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import static java.util.logging.Logger.global;
import static javafx.application.Platform.exit;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import static jdk.nashorn.internal.objects.NativeRegExp.global;


  

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author DELL
 */
public class udpclient extends javax.swing.JFrame  {
      private static final int MAX_DATA_SIZE = 1024;
 
String str;
public static String str1= "test.txt";
	static InputStream in ;
	static OutputStream out;
           
    int x=0 ; 
    int y=0; 
 DatagramSocket clientSocket;
 DefaultListModel model = new DefaultListModel();
        
 
    public  static String tt(){
       return str1;
    

}
 
    /**
     * Creates new form 
     */

 
    public udpclient() throws SocketException, UnknownHostException, IOException {
     tcpclient l = new tcpclient(); 
       l.show();
      
        l.setTitle("ClientChat");
         l.portfile.setText("4000");
   l.portfile.enable(false);
       // l.show();
        l.jButton5.hide();
        l.jButton1.hide();
  
   
 // ptop.setVisible(false);
      	//dispose();
   
        initComponents();
      ipp.removeAllItems();
     int count = 0 ;
               SimpleAttributeSet attributeSet = new SimpleAttributeSet();
StyleConstants.setItalic(attributeSet, true);
data.setCharacterAttributes(attributeSet, true);



       
       
        
      /* try {
           
            ipp.addItem(InetAddress.getLocalHost().getHostAddress());
        } catch (UnknownHostException ex) {
            Logger.getLogger(ptop.class.getName()).log(Level.SEVERE, null, ex);
        }*/
      Enumeration e = NetworkInterface.getNetworkInterfaces();
while(e.hasMoreElements())
{
    
    NetworkInterface n = (NetworkInterface) e.nextElement();
    Enumeration ee = n.getInetAddresses();
    while (ee.hasMoreElements())
    {
        InetAddress i = (InetAddress) ee.nextElement();
        String s= i.getHostAddress().toString();
        if(s.charAt(0)=='1'){
       ipp.addItem(i.getHostAddress());
   
         // count ++;
        }
     
       
    }
   
   
}

   //  ipp.removeItemAt(6);
 /*  int y = count; 
  String z []= new String [y] ;
  
        Enumeration r = NetworkInterface.getNetworkInterfaces();
while(e.hasMoreElements())
{
    
    NetworkInterface n = (NetworkInterface) e.nextElement();
    Enumeration ee = n.getInetAddresses();
    while (ee.hasMoreElements())
    {
        InetAddress i = (InetAddress) ee.nextElement();
        String s= i.getHostAddress().toString();
        if(s.charAt(0)=='1'){
       // ipp.addItem(i.getHostAddress());
   
        z[y]=i.getHostAddress().toString();
        y--;
        }
     
       
    }
   
   
}
while(count!=0){
    ipp.addItem(z[count]);
    count --; 
}*/
  
     


 
 
    }
    



    
    
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        loggin = new javax.swing.JButton();
        Logout = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        msg = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        sta = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        tcp1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tcp2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ipp = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        ip = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        port = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        ip1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        port1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        data = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        online = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        patth = new javax.swing.JTextField();
        file = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        portfile = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Username: ");

        loggin.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        loggin.setForeground(new java.awt.Color(255, 0, 0));
        loggin.setText("Login");
        loggin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logginActionPerformed(evt);
            }
        });

        Logout.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        Logout.setText("logout");
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });

        msg.setColumns(20);
        msg.setRows(5);
        msg.setToolTipText("enter your massege here");
        jScrollPane2.setViewportView(msg);

        sta.setColumns(20);
        sta.setRows(5);
        jScrollPane3.setViewportView(sta);

        jLabel3.setText("tcp server ip: ");

        tcp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tcp1ActionPerformed(evt);
            }
        });

        jLabel6.setText("tcp server port: ");

        tcp2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tcp2ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 255));
        jLabel5.setText("Available Interfaces");

        ipp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ipp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ippActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("Local Ip:");

        ip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel7.setText("Local Port:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel9.setText("Remote Ip:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel8.setText("Remote Port:");

        port1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                port1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 0, 0));
        jButton3.setText("send msg");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Urdu Typesetting", 1, 14)); // NOI18N
        jButton4.setText("test button");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("refresh");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 3, 13)); // NOI18N
        jLabel10.setText("Status:");

        jScrollPane4.setViewportView(data);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/network1/549b7aca26234f449d5869506aa9f89f (1).png"))); // NOI18N

        jScrollPane5.setViewportView(online);

        jButton2.setText("choose file");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        patth.setText("send file to the server by click on the button");
        patth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patthActionPerformed(evt);
            }
        });

        file.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        file.setForeground(new java.awt.Color(255, 0, 0));
        file.setText("send file");
        file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel12.setText("udp server port (only for files):");

        portfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portfileActionPerformed(evt);
            }
        });

        jLabel13.setText("press------>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 664, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(loggin, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Logout)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(patth)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(portfile, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 49, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel13)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2)
                                    .addComponent(file, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(202, 202, 202))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton5)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(3, 3, 3)
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tcp1)
                                        .addComponent(tcp2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jLabel6)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton4))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(2, 2, 2)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel4)
                                                    .addComponent(jLabel7))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(port, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(ip, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(port1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addGap(20, 20, 20)
                                            .addComponent(ip1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addComponent(ipp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5))))
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tcp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tcp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(ip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ip1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(port1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(loggin, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Logout, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(87, 87, 87)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ipp, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(124, 124, 124)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton2)
                                    .addComponent(patth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(portfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel13))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(318, 318, 318)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(file, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(69, 69, 69))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logginActionPerformed
        // TODO add your handling code here:
        

        
     online.setModel(model);   
        
        try {
       
     model.addElement(InetAddress.getLocalHost().getHostAddress());
   
              int port = Integer.parseInt(tcp2.getText());
            Socket clientSocket; 
            clientSocket = new Socket("127.0.0.1", port);
              DataOutputStream outToServer = 
          new DataOutputStream(clientSocket.getOutputStream()); 

                BufferedReader inFromServer = 
          new BufferedReader(new
          InputStreamReader(clientSocket.getInputStream())); 

         

        outToServer.writeBytes(InetAddress.getLocalHost().getHostAddress());
        

       
      //  System.out.println("FROM SERVER: " + modifiedSentence1); 
        // JOptionPane.showMessageDialog(null,modifiedSentence1);
          JOptionPane.showMessageDialog(null," you are login"+""+ "  "+ name.getText());
          /*    String sentence1; 
        String modifiedSentence1; 

        BufferedReader inFromUser = 
          new BufferedReader(new InputStreamReader(System.in)); 
 System.out.println("please enter a msg :"); 
        Socket clientSocket = new Socket("127.0.0.1", 6789); 

        DataOutputStream outToServer = 
          new DataOutputStream(clientSocket.getOutputStream()); 

                BufferedReader inFromServer = 
          new BufferedReader(new
          InputStreamReader(clientSocket.getInputStream())); 

        sentence1 = inFromUser.readLine(); 

        outToServer.writeBytes(sentence1 + '\n'); 

        modifiedSentence1 = inFromServer.readLine(); 

        System.out.println("FROM SERVER: " + modifiedSentence1); 

        clientSocket.close(); */
        } catch (Exception ex) {
            Logger.getLogger(udpclient.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,ex);
        }

      

       

       
        
        
    }//GEN-LAST:event_logginActionPerformed

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        // TODO add your handling code here:
          System.exit(0);
        clientSocket.close();
         JOptionPane.showMessageDialog(null," goodbye!"+""+""+ name.getText());
        
        
    }//GEN-LAST:event_LogoutActionPerformed

    private void tcp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tcp1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tcp1ActionPerformed

    private void tcp2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tcp2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tcp2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
       
   if(port1.getText().equals("") && ip1.getText().equals("")){
        JOptionPane.showMessageDialog(null, "please enter port number and ip address for remote");
       
   }
   else{
  
 
        try {
               //int por = Integer.parseInt(port.getText());
        
          
            //clientSocket = new DatagramSocket(por);
            
           int po = Integer.parseInt(port1.getText());
            InetSocketAddress add = new  InetSocketAddress(ip1.getText(),po);
    
      byte[] sendData = new byte[1024]; 
      if(name.getText().equals("")){
      String sent=port.getText().toString()+">>"+msg.getText();
      sendData = sent.getBytes(); 
      }
      else{
             String sent=name.getText().toString()+">>"+msg.getText();
      sendData = sent.getBytes();    
          
      }
    
      
      
        FileOutputStream f=new FileOutputStream(msg.getText());
        





       DatagramPacket sendPacket = 
        new DatagramPacket(sendData, sendData.length); 
          
  sendPacket.setSocketAddress(add);
      clientSocket.send(sendPacket); 
  
      
      Style style = data.addStyle("", null);
StyleConstants.setForeground(style, Color.red);

     StyledDocument doc =data.getStyledDocument();
            doc.insertString(doc.getLength(), "you"+">>"+msg.getText()+"\n", style);
           
       
 
       msg.setText("");
      
      JOptionPane.showMessageDialog(null, "تم الارسال");
    
      
      
            
     
    }   catch (Exception ex) {
           Logger.getLogger(udpclient.class.getName()).log(Level.SEVERE, null, ex);
       } }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
     
               
                

        if(port.getText().equals("")){
            
            JOptionPane.showMessageDialog(null, "please enter port number"); 
            
            
        }
        else{
            
         int por = Integer.parseInt(port.getText());
      
                  
                   
                   
        try {
          clientSocket  = new DatagramSocket(null);
       if(ip.getText().equals("")){    
           
                ip.setText(ipp.getSelectedItem().toString());
      JOptionPane.showMessageDialog(null,"your local ip is : " +  ipp.getSelectedItem().toString());
      
            }
        
                   //SocketAddress addr = new  SocketAddress(por , ip.getText()); 
                  InetSocketAddress addr = new  InetSocketAddress(ip.getText(),por);
                  clientSocket.setReuseAddress(true);
         clientSocket.bind(addr);
         
      
/*clientSocket.setReuseAddress(true);
clientSocket.bind(new InetSocketAddress(InetAddress.getByName("192.168.56.1"), 5566));*/
      
           JOptionPane.showMessageDialog(null, "test is successfully");
           ip.setEditable(false);
                              
          
  
          x=1;
        } catch (Exception ex) {
             JOptionPane.showMessageDialog(null, ex);
        }
        
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

       
        byte[] receiveData = new byte[1024];
		//DatagramPacket packet = new DatagramPacket(buffer, buffer.length);
		System.out.print(x);
		if(x==1){
		
			try
                           
			{
			 DatagramPacket receivePacket = 
         new DatagramPacket(receiveData, receiveData.length); 
  
      clientSocket.receive(receivePacket); 
  
      String sentence = 
          new String(receivePacket.getData()); 
  y=1;
 
 try {
      Style style = data.addStyle("", null);
StyleConstants.setForeground(style, Color.blue);

     StyledDocument doc =data.getStyledDocument();
            doc.insertString(doc.getLength(), sentence+"\n", style);
           
        } catch (BadLocationException ex) {
            Logger.getLogger(udpclient.class.getName()).log(Level.SEVERE, null, ex);
        }

    
       
       sta.setText("You Recived msg from IP=  " +  receivePacket.getAddress().toString()+ "  ,with Port  "+receivePacket.getPort());
        //JOptionPane.showMessageDialog(null,"تم الاستقبال ");
        
			} 
			catch (Exception e)
			{
				 JOptionPane.showMessageDialog(null, e);
			}
                }       
    }//GEN-LAST:event_jButton5ActionPerformed

    private void ippActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ippActionPerformed
        // TODO add your handling code here:+
     
    }//GEN-LAST:event_ippActionPerformed

    private void ipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipActionPerformed
        // TODO add your handling code here:
        ip.setEditable(true);
    }//GEN-LAST:event_ipActionPerformed

    private void port1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_port1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_port1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
                JFileChooser fileChooser = new JFileChooser();
				fileChooser.showOpenDialog(jButton2);
			 str = fileChooser.getSelectedFile().getAbsolutePath();
                          str1= fileChooser.getSelectedFile().getName();
				 JOptionPane.showMessageDialog(null, fileChooser.getSelectedFile().getName() );  
     patth.setText(str);
   
  msg.setText("you sent to server : "+str);
   
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void patthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patthActionPerformed

    private void fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileActionPerformed
        // TODO add your handling code here:
        
        
          
         DatagramSocket clskt;
       try {
           
           Packet packet = new Packet();
      
     
         
           clskt = new DatagramSocket(3000);
        //    Scanner input = new Scanner (System.in);
   int port =4000;
    InetAddress IPAddress = InetAddress.getByName("127.0.0.1"); 
    System.out.println("Enter Destination Host name");
   // String hostname=input.next();
   // dest.getByName(hostname);
    int packetcount=0;
   
   // String path = input.next(); 
    File initialFile = new File(str1);
  
     
            FileInputStream targetStream = new FileInputStream(initialFile);
    int filesize=targetStream.available();
    //int neededpackets =(int)Math.ceil((double)(size/1024));
     byte [] data= new byte[1024];
     
     // counting bytes
   
   
      packet.addData(data, data.length);
       ByteBuffer byteBuf = packet.toByteBuffer();
      packet.getPacketLength();
       byte[] sendData = byteBuf.array();
       int length = packet.getPacketLength();
      
        byte[] recvData = new byte[length];
         System.arraycopy(sendData, 0, recvData, 0, length);
      // taha i = new  taha(packet);
             DatagramPacket paramDatagramPacket;
     int ack = 0; 
     int ppacket =  0; 
     sta.append("send packet  "+ ppacket );
     sta.append("recive ack "+ ack );
         
      
          
       
     //create a packet
    DatagramPacket clpkt=new DatagramPacket(data,data.length,IPAddress,port);
    packetcount++;
    clskt.send(clpkt);
   
        
        
       } catch (Exception ex) {
           Logger.getLogger(udpclient.class.getName()).log(Level.SEVERE, null, ex);
       }
   
                try {
      Style style = data.addStyle("", null);
StyleConstants.setForeground(style, Color.blue);

     StyledDocument doc =data.getStyledDocument();
            doc.insertString(doc.getLength(), "you sent to servere : "+str+"\n", style);
           
        } catch (BadLocationException ex) {
            Logger.getLogger(udpclient.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
         
         //   InetSocketAddress add = new  InetSocketAddress(ip1.getText(),po);
   
        
        // data.setText("you sent to servere : "+str);
         
        
   /*   try { 
         
       Socket clientsocket = new Socket("127.0.0.1", 4000); 
             DataOutputStream outToServer = 
          new DataOutputStream(clientsocket.getOutputStream()); 
           outToServer.writeBytes(str1);
       } catch (IOException ex) {
           Logger.getLogger(tcpclient.class.getName()).log(Level.SEVERE, null, ex);
       }*/
      /*   msg.setText("");
         File file = new File(str);
        byte [] b = new byte[1024];
        try {
            
            
            
            
            
					in = new FileInputStream(file);
				} catch (FileNotFoundException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				} 
				
				try {
                                   
                                     
					out = socket.getOutputStream();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
                                
                                	try {
					int count ;
					while ((count  = in.read(b))>0) {
						out.write(b, 0, count);
                                               JOptionPane.showMessageDialog(null, b);
					}
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
         try {
      Style style = data.addStyle("", null);
StyleConstants.setForeground(style, Color.blue);

     StyledDocument doc =data.getStyledDocument();
            doc.insertString(doc.getLength(), "you sent to servere : "+str+"\n", style);
           
        } catch (BadLocationException ex) {
            Logger.getLogger(udpclient.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        
        
        
        
        
        
    }//GEN-LAST:event_fileActionPerformed

    private void portfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portfileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portfileActionPerformed
    
    
   /* public void start()
	{
           
		Thread thread = new Thread(this);
		thread.start();
	}*/
   
	/*public void run()
	{
		byte[] receiveData = new byte[1024];
		//DatagramPacket packet = new DatagramPacket(buffer, buffer.length);
		
		
		 while(true){
			try
                           
			{
			 DatagramPacket receivePacket = 
         new DatagramPacket(receiveData, receiveData.length); 
  
      clientSocket.receive(receivePacket); 
  
      String sentence = 
          new String(receivePacket.getData()); 
  
       bigdata.setText(sentence);
        JOptionPane.showMessageDialog(null,"تم الاستقبال ");
			} 
			catch (Exception e)
			{
				 JOptionPane.showMessageDialog(null, e);
			}
                            }
	}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(udpclient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(udpclient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(udpclient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(udpclient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             /*   new ptop().setVisible(true);
               ptop t = new ptop(); 
                try{
                 int por = Integer.parseInt(t.port.getText());
            DatagramSocket serverSocket = new DatagramSocket(por); 
  
      byte[] receiveData = new byte[1024]; 
  
  
      while(true) 
        { 
  
          DatagramPacket receivePacket = 
             new DatagramPacket(receiveData, receiveData.length); 
           serverSocket.receive(receivePacket); 

          String sentence = new String(receivePacket.getData()); 
        
  
          InetAddress IPAddress = receivePacket.getAddress(); 
  
          int port = receivePacket.getPort(); 
  
       t.sta.setText(port+"");
       t.bigdata.setText(sentence);
  
         
  
  
            
            }    
            }   catch (Exception ex) {
                    Logger.getLogger(ptop.class.getName()).log(Level.SEVERE, null, ex);
                }
            
            
        */
             
         
          
        }});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Logout;
    private javax.swing.JTextPane data;
    private javax.swing.JButton file;
    private javax.swing.JTextField ip;
    private javax.swing.JTextField ip1;
    private javax.swing.JComboBox<String> ipp;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    public javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton loggin;
    private javax.swing.JTextArea msg;
    private javax.swing.JTextField name;
    public javax.swing.JList<String> online;
    private javax.swing.JTextField patth;
    public javax.swing.JTextField port;
    private javax.swing.JTextField port1;
    public javax.swing.JTextField portfile;
    private javax.swing.JTextArea sta;
    private javax.swing.JTextField tcp1;
    private javax.swing.JTextField tcp2;
    // End of variables declaration//GEN-END:variables

    public void run1() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void taha(Packet packet) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
